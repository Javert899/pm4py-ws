import os
from pm4pyws.handlers.parquet.parquet import ParquetHandler
import time

F = open("result.txt","w")
dir_path = "files/event_logs/"
dir_content = os.listdir(dir_path)
for file in dir_content:
    if ".parque" in file:
        file_path = os.path.join(dir_path, file)
        print("handling",file,file_path)
        F.write("\n\nhandling "+str(file)+" "+str(file_path))
        t0 = time.time()
        handler = ParquetHandler()
        handler.build_from_path(file_path)
        t1 = time.time()
        print("t1-t0 loading",(t1-t0))
        F.write("\nt1-t0 = "+str(t1-t0))
        handler.get_schema(variant="dfg_freq")
        t2 = time.time()
        print("t2-t1",(t2-t1))
        F.write("\nt2-t1 dfg_freq = "+str(t2-t1))
        handler.get_schema(variant="dfg_perf")
        t3 = time.time()
        print("t3-t2",(t3-t2))
        F.write("\nt3-t2 dfg_perf = "+str(t3-t2))
        handler.get_schema(variant="inductive_freq")
        t4 = time.time()
        print("t4-t3",(t4-t3))
        F.write("\nt4-t3 inductive_freq = "+str(t4-t3))
        handler.get_schema(variant="inductive_perf")
        t5 = time.time()
        print("t5-t4",(t5-t4))
        F.write("\nt5-t4 inductive_perf = "+str(t5-t4))
        handler.get_schema(variant="heuristics_freq")
        t6 = time.time()
        print("t6-t5",(t6-t5))
        F.write("\nt6-t5 heuristics_freq = "+str(t6-t5))
        handler.get_schema(variant="heuristics_perf")
        t7 = time.time()
        print("t7-t6",(t7-t6))
        F.write("\nt7-t6 heuristics_perf = "+str(t7-t6))
        handler.get_schema(variant="tree_freq")
        t8 = time.time()
        print("t8-t7",(t8-t7))
        F.write("\nt8-t7 tree_freq = "+str(t8-t7))
        handler.get_schema(variant="tree_perf")
        t9 = time.time()
        print("t9-t8",(t9-t8))
        F.write("\nt9-t8 tree_perf = "+str(t9-t8))
        handler.get_case_duration_svg()
        t10 = time.time()
        print("t10-t9",(t10-t9))
        F.write("\nt10-t9 get case duration svg = "+str(t10-t9))
        handler.get_events_per_time_svg()
        t11 = time.time()
        print("t11-t10",(t11-t10))
        F.write("\nt11-t10 get events per time = "+str(t11-t10))
F.close()